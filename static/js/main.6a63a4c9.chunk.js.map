{"version":3,"sources":["common/textstyles.js","matt.jpg","components/header.js","components/navbar.js","components/body.js","main.js","serviceWorker.js","index.js"],"names":["Title","props","className","children","SubTitle","ContainerTitle","ContainerText","ContainerLink","Date","Header","Jumbotron","HeaderImage","src","mattPhoto","alt","NavBar","NavBarItem","link","href","type","Body","CustomContainer","title","Card","MainApp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a63a4c9.chunk.js","sourcesContent":["import '../main.css';\r\nimport React from \"react\";\r\n\r\nexport function Title(props) {\r\n    return <div className={'title'}>{props.children}</div>;\r\n}\r\n\r\nexport function SubTitle(props) {\r\n    return <div className={'subtitle'}>{props.children}</div>;\r\n}\r\n\r\nexport function ContainerTitle(props) {\r\n    return <div className={'containerTitle'}>{props.children}</div>;\r\n}\r\n\r\nexport function ContainerText(props) {\r\n    return <div className={'containerText'}>{props.children}</div>;\r\n}\r\n\r\nexport function ContainerLink(props) {\r\n    return <span className={'containerLink'}>{props.children}</span>;\r\n}\r\n\r\nexport function Date(props) {\r\n    return <span className={'containerText date'}>{props.children}</span>;\r\n}","export default __webpack_public_path__ + \"static/media/matt.d6c32fe4.jpg\";","import {Jumbotron} from \"react-bootstrap\";\r\nimport {SubTitle, Title} from \"../common/textstyles\";\r\nimport mattPhoto from \"../matt.jpg\";\r\nimport React from \"react\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <Jumbotron className={'text-center'}>\r\n            <HeaderImage/>\r\n            <Title>Matthew Zegar</Title>\r\n            <SubTitle>Computer Science Student at Simon Fraser University</SubTitle>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nfunction HeaderImage() {\r\n    return (\r\n        <img className={'headerImage'} src={mattPhoto} alt='Matthew Zegar'/>\r\n    );\r\n}","import {FaCodeBranch, FaGithub, FaGraduationCap, FaIdCard, FaLinkedinIn, FaUsers} from \"react-icons/fa\";\r\nimport React from \"react\";\r\n\r\nexport function NavBar() {\r\n    return (\r\n        <ul className=\"nav justify-content-center\">\r\n            <NavBarItem link={'https://github.com/mzegar/resume/blob/master/Matthew%20Zegar%20-%20Resume%202020%201page.pdf'}>\r\n                <FaIdCard className={'navBarItemIcon'}/> Resume\r\n            </NavBarItem>\r\n\r\n            <NavBarItem link={'https://github.com/mzegar'}>\r\n                <FaGithub className={'navBarItemIcon'}/> GitHub\r\n            </NavBarItem>\r\n\r\n            <NavBarItem link={'https://www.linkedin.com/in/matthewzegar/'}>\r\n                <FaLinkedinIn className={'navBarItemIcon'}/> LinkedIn\r\n            </NavBarItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction NavBarItem(props) {\r\n    return (\r\n        <div className={'navBarItemSpacing'}>\r\n            <a href={props.link}>\r\n                <button type=\"button\" className=\"btn btn-outline-light\">\r\n                    {props.children}\r\n                </button>\r\n            </a>\r\n        </div>\r\n    );\r\n}","import {ContainerLink, ContainerText, ContainerTitle, Date} from \"../common/textstyles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport function Body() {\r\n    return (\r\n        <div className=\"container center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <CustomContainer title={'About Me'}>\r\n                        Hello! My name is Matthew Zegar. I'm currently doing an internship at NVIDIA. This website\r\n                        contains all relevant information regarding my work experience, projects,\r\n                        and education.\r\n                    </CustomContainer>\r\n                </div>\r\n                <div className=\"col-md\">\r\n                    <CustomContainer title={'Contact Me'}>\r\n                        <a href=\"mailto:matthewzegar@gmail.com\">matthewzegar@gmail.com</a>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                    <CustomContainer title={'Work Experience'}>\r\n                        <ContainerLink><a href=\"https://www.nvidia.com/en-us/\">NVIDIA - Software QA Engineer Intern</a></ContainerLink> <Date>(Jan 2021 - Present)</Date>\r\n                        <ul>\r\n                            <li>Currently interning here!</li>\r\n                        </ul>\r\n\r\n\r\n                        <ContainerLink><a href=\"https://homex.com/\">HomeX - Mobile Developer Internship</a></ContainerLink> <Date>(May 2020 - Dec 2020)</Date>\r\n                        <ul>\r\n                            <li>Built core user functionality on pre-production IOS/Android consumer mobile app using Flutter</li>\r\n                            <li>Developed automated end-to-end tests in Dart ran using GitHub actions</li>\r\n                            <li>Constructed app pages using MVVM (Model-View-ViewModel) and GraphQL endpoints</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://kabam.com/\">Kabam - Software Engineer Co-op</a></ContainerLink> <Date>(May 2019 - Dec 2019)</Date>\r\n                        <ul>\r\n                            <li>Worked alongside three different teams during the duration of the co-op (Front-end, Systems, Back-end)</li>\r\n                            <li>Implemented features using C# played by hundreds of thousands of users</li>\r\n                            <li>Optimized game code to improve game performance and reduce game crashes</li>\r\n                            <li>Improved server web interface usability using Javascript, jQuery, and Node.js</li>\r\n                            <li>Fixed bugs and problem solved live in-game issues over multiple releases</li>\r\n                        </ul>\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <CustomContainer title={'Languages'}>\r\n                        C++, C#, Dart, Python, JavaScript, Java\r\n                    </CustomContainer>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <CustomContainer title={'Tools / Libraries'}>\r\n                        Git, Flutter, React, Spring, Node.js, Bootstrap, JavaFX, SQL\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                    <CustomContainer title={'Projects'}>\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/Retter\">Retter - Flutter Reddit App</a></ContainerLink> <Date>Dart, Flutter – (June 2020)</Date>\r\n                        <ul>\r\n                            <li>A complete Reddit experience built using Flutter</li>\r\n                            <li>Open sourced and contributed to by other developers</li>\r\n                            <li>Available on IOS and Android</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/Social-Gaming-App\">Social Gaming App</a></ContainerLink> <Date>C++, GoogleTest, CMake – (Jan 2020 - April 2020)</Date>\r\n                        <ul>\r\n                            <li>Developed the application using modern C++ practices</li>\r\n                            <li>Created a build system using CMake</li>\r\n                            <li>Wrote extensive testing for the application using the GoogleTest framework</li>\r\n                            <li>Led the eight person group as the \"Project Manager\"</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/Chip8-Preview/blob/master/README.md\">JavaScript Chip8 Emulator</a></ContainerLink> <Date>JavaScript, Bootstrap – (Jan 2019 - April 2019)</Date>\r\n                        <ul>\r\n                            <li>Played the role of GitHub master and managed the repository for group members</li>\r\n                            <li>Implemented all front-end work for the project (using JavaScript, Bootstrap, HTML)</li>\r\n                            <li>Designed the internal program structure according to Chip8 system specifications</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink>Database Interface App</ContainerLink> <Date>Java, JavaFX, Spring – (April 2019)</Date>\r\n                        <ul>\r\n                            <li>Setup a Spring server that provides Rest API (CRUD)</li>\r\n                            <li>Rest API calls modify the \"Database\" with the information passed in</li>\r\n                            <li>Designed a front-end JavaFX application responsible for providing UI and making client calls to the server</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/Invoke\">Invoke</a></ContainerLink> <Date>C#, Unity – (Dec 2018)</Date>\r\n                        <ul>\r\n                            <li>Participated in the “Homemade Game Jam” by creating a mobile game within Unity</li>\r\n                            <li>Designed all visual assets and programming used within the game</li>\r\n                            <li>Complied a mobile and web version</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/Tetracube\">Tetracube</a></ContainerLink> <Date>Python, Pygame – (Oct 2018)</Date>\r\n                        <ul>\r\n                            <li>Recreated NES Tetris using Python and Pygame library</li>\r\n                            <li>Implemented an OOP approach to represent Tetris pieces in memory</li>\r\n                            <li>Compiled all Python code to an executable using cx_Freeze makefile</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar/dotabot\">Dotabot</a></ContainerLink> <Date>JavaScript, Node.js, Heroku – (May 2018)</Date>\r\n                        <ul>\r\n                            <li>Gathers API information from a server and neatly formats it for users requesting data</li>\r\n                            <li>Allows users to input their unique ID to request specific information about their statistics</li>\r\n                            <li>Hosted on Heroku to maintain constant uptime</li>\r\n                        </ul>\r\n\r\n                        <ContainerLink><a href=\"https://github.com/mzegar?tab=repositories\">Other projects</a></ContainerLink>\r\n                        <ul>\r\n                            <li>Other projects can be found on my GitHub</li>\r\n                            <li><a href=\"https://github.com/mzegar/LearnPianoNotes\">Piano Note learning App</a></li>\r\n                            <li><a href=\"https://github.com/mzegar/smashbot\">Twitterbot made with Node.js</a></li>\r\n                            <li><a href=\"https://github.com/mzegar/Minesweeper-Cplusplus\">Minesweeper coded using C++</a></li>\r\n                            <li><a href=\"https://github.com/mzegar/Connect4\">Connect4 in TypeScript</a></li>\r\n                        </ul>\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                    <CustomContainer title={'Education'}>\r\n                        <p>BSc. Software Systems - Computer Science   <i>(Sept 2017 - Sept 2021)</i></p>\r\n                        <i>Simon Fraser University, Burnaby, British Columbia</i>\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md\">\r\n                    <CustomContainer title={'Courses'}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md\">\r\n                                <ContainerLink>Programming</ContainerLink>\r\n                                <ul>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/summer/courses/cmpt/225.html\">Data\r\n                                        Structures and Programming</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/cmpt/276.html\">Introduction\r\n                                        to Software Engineering</a></li>\r\n                                    <li><a href=\"http://www.sfu.ca/students/calendar/2020/spring/courses/cmpt/354.html\">Database\r\n                                        Systems</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/cmpt/135.html\">OOP\r\n                                        using C++</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/cmpt/213.html\">OOP\r\n                                        using Java</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/cmpt/295.html\">Introduction\r\n                                        to Computer Systems</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"col-md\">\r\n                                <ContainerLink>Mathematics</ContainerLink>\r\n                                <ul>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/summer/courses/math/150.html\">Calculus\r\n                                        I</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/math/232.html\">Linear\r\n                                        Algebra</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/macm/101.html\">Discrete\r\n                                        Mathematics I</a></li>\r\n                                    <li><a href=\"https://www.sfu.ca/students/calendar/2020/spring/courses/macm/201.html\">Discrete\r\n                                        Mathematics II</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </CustomContainer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CustomContainer(props) {\r\n    return (\r\n        <Card className={'customContainer'}>\r\n            <ContainerTitle>{props.title}</ContainerTitle>\r\n            <ContainerText>{props.children}</ContainerText>\r\n            <br/>\r\n        </Card>\r\n    );\r\n}","import './main.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport { Header } from './components/header';\r\nimport { NavBar } from './components/navbar';\r\nimport { Body } from './components/body';\r\n\r\nfunction MainApp() {\r\n  return (\r\n      <div>\r\n          <Header/>\r\n          <NavBar/>\r\n          <br/><br/>\r\n          <Body/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MainApp;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './main';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}